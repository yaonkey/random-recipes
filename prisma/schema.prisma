generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Recipe {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  imageUrl  String
  createdAt DateTime @default(now())
}

model images {
  id             Int              @id @default(autoincrement())
  created_at     DateTime         @default(now()) @db.Timestamp(6)
  path           String           @db.VarChar(255)
  product_images product_images[] @ignore

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model product_images {
  product_id Int
  image_id   Int
  products   products @relation(fields: [product_id], references: [id], onDelete: Cascade, map: "product_images_relation_1")
  images     images   @relation(fields: [image_id], references: [id], onDelete: Cascade, map: "product_images_relation_2")

  @@ignore
}

model product_schemas {
  id         Int        @id @default(autoincrement())
  title      String?    @default("Product schema") @db.VarChar(255)
  file_path  String?    @db.VarChar(512)
  created_at DateTime   @default(now()) @db.Timestamp(6)
  updated_at DateTime?  @default(now()) @db.Timestamp(6)
  author     String?    @db.VarChar(255)
  products   products[]

  @@ignore
}

model product_types {
  id           Int        @id @default(autoincrement())
  created_at   DateTime   @default(now()) @db.Timestamp(6)
  title        String     @db.VarChar(255)
  is_available Boolean    @default(true)
  products     products[]

  @@ignore
}

model products {
  id              Int              @id @default(autoincrement())
  created_at      DateTime         @default(now()) @db.Timestamp(6)
  title           String           @db.VarChar(255)
  old_price       Float?
  price           Float?
  description     String?
  type            Int?
  file            Int?
  is_available    Boolean          @default(true)
  product_images  product_images[] @ignore
  product_types   product_types?   @relation(fields: [type], references: [id], map: "products_relation_1")
  product_schemas product_schemas? @relation(fields: [file], references: [id], map: "products_relation_2")

  @@ignore
}
